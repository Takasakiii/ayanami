// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.898
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func openFileInput() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_openFileInput_151c`,
		Function: `function __templ_openFileInput_151c(){const inputSelection = document.getElementById('fileInput')
    inputSelection.click()
}`,
		Call:       templ.SafeScript(`__templ_openFileInput_151c`),
		CallInline: templ.SafeScriptInline(`__templ_openFileInput_151c`),
	}
}

func uploadFile() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_uploadFile_1287`,
		Function: `function __templ_uploadFile_1287(){const fileInput = document.getElementById('fileInput')
    const file = fileInput.files[0]
    
    if (!file) {
        return
    }
    
    const formData = new FormData()
    formData.append('file', file)
    formData.append('password', null)
    
    fetch('/files', {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (response.ok) {
            return response.json()
        }
        throw new Error('Erro no upload do arquivo')
    })
    .then(data => {
        console.log('Upload realizado com sucesso:', data)
        alert('Arquivo enviado com sucesso!')
    })
    .catch(error => {
        console.error('Erro:', error)
        alert('Erro ao enviar arquivo: ' + error.message)
    })
}`,
		Call:       templ.SafeScript(`__templ_uploadFile_1287`),
		CallInline: templ.SafeScriptInline(`__templ_uploadFile_1287`),
	}
}

func IndexPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n            .container {\n                background: rgba(255, 255, 255, 0.95);\n                border-radius: 20px;\n                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n                backdrop-filter: blur(10px);\n                max-width: 800px;\n                width: 100%;\n                overflow: hidden;\n                animation: slideUp 0.8s ease-out;\n            }\n\n            @keyframes slideUp {\n                from {\n                    opacity: 0;\n                    transform: translateY(50px);\n                }\n                to {\n                    opacity: 1;\n                    transform: translateY(0);\n                }\n            }\n\n            .header {\n                background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\n                padding: 40px 30px;\n                text-align: center;\n                position: relative;\n                overflow: hidden;\n            }\n\n            .header::before {\n                content: '';\n                position: absolute;\n                top: -50%;\n                left: -50%;\n                width: 200%;\n                height: 200%;\n                background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);\n                animation: rotate 20s linear infinite;\n            }\n\n            @keyframes rotate {\n                from { transform: rotate(0deg); }\n                to { transform: rotate(360deg); }\n            }\n\n            .logo {\n                font-size: 4rem;\n                font-weight: 900;\n                color: white;\n                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n                margin-bottom: 10px;\n                position: relative;\n                z-index: 1;\n                letter-spacing: 2px;\n            }\n\n            .subtitle {\n                font-size: 1.2rem;\n                color: rgba(255, 255, 255, 0.9);\n                position: relative;\n                z-index: 1;\n                font-weight: 300;\n            }\n\n            .main-content {\n                padding: 40px 30px;\n            }\n\n            .upload-section {\n                background: #f8fafc;\n                border: 3px dashed #cbd5e0;\n                border-radius: 15px;\n                padding: 40px;\n                text-align: center;\n                transition: all 0.3s ease;\n                cursor: pointer;\n                position: relative;\n            }\n\n            .upload-section:hover {\n                border-color: #4facfe;\n                background: #f0f9ff;\n                transform: translateY(-2px);\n            }\n\n            .upload-section.dragover {\n                border-color: #00f2fe;\n                background: #e0f7fa;\n                transform: scale(1.02);\n            }\n\n            .upload-icon {\n                font-size: 4rem;\n                color: #64748b;\n                margin-bottom: 20px;\n                transition: all 0.3s ease;\n            }\n\n            .upload-section:hover .upload-icon {\n                color: #4facfe;\n                transform: scale(1.1);\n            }\n\n            .upload-text {\n                font-size: 1.5rem;\n                color: #334155;\n                margin-bottom: 10px;\n                font-weight: 600;\n            }\n\n            .file-input {\n                display: none;\n            }\n\n            .footer {\n                text-align: center;\n                color: rgba(255, 255, 255, 0.7);\n                margin-top: 20px;\n                font-size: 0.9rem;\n            }\n\n            .footer a {\n                color: rgba(255, 255, 255, 0.7);\n                text-decoration: none;\n            }\n\n            .footer a:hover {\n                color: rgba(255, 255, 255, 0.9);\n            }\n\n            @media (max-width: 768px) {\n                .logo {\n                    font-size: 3rem;\n                }\n\n                .main-content {\n                    padding: 30px 20px;\n                }\n\n                .upload-section {\n                    padding: 30px 20px;\n                }\n            }\n        </style> <div class=\"container\"><div class=\"header\"><div class=\"logo\">AYANAMI</div><div class=\"subtitle\">Upload tempor√°rio de arquivo</div></div><div class=\"main-content\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, openFileInput())
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"upload-section\" id=\"uploadArea\" onclick=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 templ.ComponentScript = openFileInput()
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var3.Call)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"><div class=\"upload-icon\">üìÅ</div><div class=\"upload-text\">Clique para enviar seu arquivo</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, uploadFile())
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<input type=\"file\" id=\"fileInput\" class=\"file-input\" onchange=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 templ.ComponentScript = uploadFile()
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var4.Call)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\"></div></div></div><div class=\"footer\">2025 Ayanami - <a href=\"https://discord.gg/8KxJNzTJzq\">Takasaki</a></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = basePage().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
